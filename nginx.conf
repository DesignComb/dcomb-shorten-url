events {}
http {
    upstream frontend {
          server 13.114.45.11:8001 max_fails=5;
    }
    upstream backend {
          server 13.114.45.11:8000 max_fails=5;
    }
    server {
    if ($host = www.dco.tw) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = dco.tw) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

        listen 80;
        listen [::]:80;
        server_name dco.tw www.dco.tw;
        root /usr/share/nginx/html;
        return 301 https://$server_name$request_uri;

        location / {
            proxy_pass http://frontend;
            proxy_redirect      off;
            proxy_http_version  1.1;

            proxy_set_header    Connection  "";
            proxy_set_header    X-Real-IP   $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    Host    $http_host;
        }

        location /api {
            proxy_pass http://backend;
            proxy_redirect      off;
            proxy_http_version  1.1;

            proxy_set_header    Connection  "";
            proxy_set_header    X-Real-IP   $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    Host    $http_host;
        }
    }

    server {
        listen 443 ssl;
        server_name dco.tw www.dco.tw;
        access_log   /var/log/nginx/nginx.vhost.access.log;
        error_log    /var/log/nginx/nginx.vhost.error.log;
        ssl_certificate /etc/letsencrypt/live/dco.tw/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/dco.tw/privkey.pem; # managed by Certbot
#         ssl_prefer_server_ciphers on;

        location / {
            proxy_pass http://frontend;
            proxy_redirect      off;
            proxy_http_version  1.1;

            proxy_set_header    Connection  "";
            proxy_set_header    X-Real-IP   $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    Host    $http_host;
        }

        location /api {
            proxy_pass http://backend;
            proxy_redirect      off;
            proxy_http_version  1.1;

            proxy_set_header    Connection  "";
            proxy_set_header    X-Real-IP   $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    Host    $http_host;
        }
    }
}
